{"version":3,"sources":["apiConstants.js","utils/helpers.jsx","components/layouts/CenteredLayout.jsx","components/Loading.jsx","components/navList/NavList.jsx","hooks/ListFetcher.jsx","containers/ListContainer.jsx","components/layouts/MasterDetails.jsx","components/card/Card.jsx","hooks/DetailsFetch.jsx","containers/DetailsContainer.jsx","containers/HomePageContainer.jsx","components/navBar/pokeIcon.png","components/navBar/NavBar.jsx","components/navList/NotFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["LIST_API","DETAILS_API","SPECIES_API","IMG_URL","getIdFromUrl","url","split","capitalizeFirstLetter","string","charAt","toUpperCase","slice","findKey","object","key","objects","rec","o","k","push","reverse","padStart","id","onHover","localStorage","getItem","fetch","then","response","json","setItem","JSON","stringify","details","catch","error","console","log","CenteredLayout","children","className","Loading","NavList","props","data","map","item","onMouseEnter","to","name","useListFetcher","api","useState","status","setStatus","setData","setError","useEffect","parse","ListContainer","useFetcher","results","MasterDetailsLayout","master","PokemonCard","img","src","alt","Types","types","t","index","type","Stats","stats","s","stat","base_stat","Evolution","evolutions","e","PokemonDetailsCard","useDetailsFetcher","evolution","evolution_chain","newDetails","Promise","all","DetailsContainer","match","params","chain","HomePageContainer","items","NavBar","pokeIcon","width","height","NotFound","App","Fragment","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2edcef7.chunk.js","sourcesContent":["export const LIST_API = \"https://pokeapi.co/api/v2/pokemon/?limit=898\";\r\nexport const DETAILS_API = \"https://pokeapi.co/api/v2/pokemon/\";\r\nexport const SPECIES_API = \"https://pokeapi.co/api/v2/pokemon-species/\";\r\nexport const IMG_URL =\r\n  \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\";\r\n","import { DETAILS_API } from \"../apiConstants\";\r\n\r\nexport function getIdFromUrl(url) {\r\n  return url.split(\"/\")[6];\r\n}\r\n\r\nexport function capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function findKey(object, key) {\r\n  let objects = [];\r\n  const rec = (o) => {\r\n    for (let k in o) {\r\n      if (typeof o[k] === \"object\") {\r\n        if (k === key) {\r\n          objects.push(o[k]);\r\n        }\r\n        rec(o[k]);\r\n      }\r\n    }\r\n  };\r\n  rec(object);\r\n  return objects.reverse();\r\n}\r\n\r\nexport function padStart(id) {\r\n  return id.padStart(3, \"0\");\r\n}\r\n\r\nexport function onHover(id, url = DETAILS_API) {\r\n  if (!localStorage.getItem(id)) {\r\n    fetch(url + id)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        localStorage.setItem(id, JSON.stringify({ details: response }));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  }\r\n}\r\n","import \"./CenteredLayout.css\";\r\n\r\nconst CenteredLayout = ({ children }) => {\r\n  return <div className=\"centered\">{children}</div>;\r\n};\r\n\r\nexport default CenteredLayout;\r\n","export function Loading() {\r\n  return <div className=\"spinner-border\"></div>;\r\n}\r\n","import \"./NavList.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { getIdFromUrl } from \"../../utils/helpers\";\r\n\r\nfunction NavList(props) {\r\n  return (\r\n    <ul className=\"nav-list-container\">\r\n      {props.data.map((item) => {\r\n        const id = getIdFromUrl(item.url);\r\n        return (\r\n          <li key={item.name}>\r\n            <Link onMouseEnter={() => props.onHover(id)} to={`/pokemon/${id}`}>\r\n              {item.name} - {id}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default NavList;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { getIdFromUrl } from \"../utils/helpers\";\r\n\r\nexport const useListFetcher = (api) => {\r\n  const [status, setStatus] = useState(\"LOADING\");\r\n  const [data, setData] = useState({});\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    const key = getIdFromUrl(api);\r\n    let unmounted = false;\r\n\r\n    if (!localStorage.getItem(key)) {\r\n      fetch(api)\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          if (!unmounted) {\r\n            setData(response);\r\n            localStorage.setItem(key, JSON.stringify(response));\r\n            setStatus(\"LOADED\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n          setStatus(\"ERROR\");\r\n        });\r\n    } else {\r\n      setData(JSON.parse(localStorage.getItem(key)));\r\n      setStatus(\"LOADED\");\r\n    }\r\n  }, [api]);\r\n  return { data, status, error };\r\n};\r\n\r\nexport default useListFetcher;\r\n","import { Fragment } from \"react\";\r\nimport { LIST_API } from \"../apiConstants\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport NavList from \"../components/navList/NavList\";\r\nimport { onHover } from \"../utils/helpers\";\r\nimport useFetcher from \"../hooks/ListFetcher\";\r\n\r\nfunction ListContainer() {\r\n  const { data, status } = useFetcher(LIST_API);\r\n  const { results } = data;\r\n\r\n  return (\r\n    <Fragment>\r\n      {status === \"LOADING\" ? (\r\n        <Loading />\r\n      ) : (\r\n        <NavList onHover={(id) => onHover(id)} data={results} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ListContainer;\r\n","import \"./MasterDetails.css\";\r\n\r\nconst MasterDetailsLayout = ({ children }) => {\r\n  const [master, details] = children;\r\n  return (\r\n    <div className=\"master-details-container\">\r\n      <div className=\"master\">{master}</div>\r\n      <div className=\"details\">{details}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MasterDetailsLayout;\r\n","import \"./Card.css\";\r\n\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\n\r\nconst PokemonDetailsCard = (props) => {\r\n  const { name, img, types, id, stats, evolutions } = props;\r\n\r\n  return (\r\n    <div className=\"pokemon-details-card\">\r\n      <div className=\"pokemon-title\">\r\n        <h2>{`${name} #${id}`}</h2>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"card-img-container\">\r\n          <img className=\"details-card-img\" src={img} alt={name} />\r\n        </div>\r\n        <div className=\"details-container\">\r\n          <Types types={types} />\r\n          <div className=\"evo-stat centered-details\">\r\n            <Stats stats={stats} />\r\n            <Evolution evolutions={evolutions} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PokemonCard = (props) => {\r\n  const { name, img, id } = props;\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <div>\r\n        {name} - {`#${id}`}\r\n      </div>\r\n      <div className=\"background\">\r\n        <img className=\"pokemon-img\" src={img} alt={name}></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Types = ({ types }) => {\r\n  return (\r\n    <div className=\"centered-details\">\r\n      {types.map((t, index) => (\r\n        <span className=\"type-badge\" key={index}>\r\n          {t.type.name}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Stats = ({ stats }) => {\r\n  return (\r\n    <div className=\"stats\">\r\n      <h4>Stats</h4>\r\n      <ul className=\"details-list\">\r\n        {stats.map((s, index) => (\r\n          <li key={index}>\r\n            {s.stat.name} - {s.base_stat}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Evolution = ({ evolutions }) => {\r\n  return (\r\n    <div className=\"evolutions\">\r\n      <h4>Evolutions</h4>\r\n      <ul className=\"details-list\">\r\n        {evolutions.map((e, index) => (\r\n          <li key={index}>{capitalizeFirstLetter(e.name)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailsCard;\r\n","import { DETAILS_API, SPECIES_API } from \"../apiConstants\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n//TODO: Remove offset if not used\r\n\r\nexport const useDetailsFetcher = (id) => {\r\n  const [status, setStatus] = useState(\"LOADING\");\r\n  const [data, setData] = useState({});\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    const details = JSON.parse(localStorage.getItem(id));\r\n\r\n    if (!details) {\r\n      Promise.all([\r\n        fetch(DETAILS_API + id).then((response) => response.json()),\r\n        fetch(SPECIES_API + id)\r\n          .then((response) => response.json())\r\n          .then((data) =>\r\n            fetch(data.evolution_chain.url).then((response) => response.json())\r\n          ),\r\n      ])\r\n        .then(([details, evolution]) => {\r\n          if (!unmounted) {\r\n            localStorage.setItem(\r\n              id,\r\n              JSON.stringify({\r\n                details: details,\r\n                evolution: evolution,\r\n              })\r\n            );\r\n            setData({\r\n              details: details,\r\n              evolution: evolution,\r\n            });\r\n            setStatus(\"LOADED\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n          setStatus(\"ERROR\");\r\n        });\r\n    } else {\r\n      if (!details.evolution) {\r\n        fetch(SPECIES_API + id)\r\n          .then((response) => response.json())\r\n          .then((data) =>\r\n            fetch(data.evolution_chain.url).then((response) => response.json())\r\n          )\r\n          .then((response) => {\r\n            const newDetails = { ...details, evolution: response };\r\n            if (!unmounted) {\r\n              localStorage.setItem(id, JSON.stringify(newDetails));\r\n              setData(newDetails);\r\n              setStatus(\"LOADED\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setError(error);\r\n            setStatus(\"ERROR\");\r\n          });\r\n      } else {\r\n        setData(JSON.parse(localStorage.getItem(id)));\r\n        setStatus(\"LOADED\");\r\n      }\r\n    }\r\n  }, [id]);\r\n  return { data, status, error };\r\n};\r\n\r\nexport default useDetailsFetcher;\r\n","import React, { Fragment } from \"react\";\r\nimport { capitalizeFirstLetter, findKey, padStart } from \"../utils/helpers\";\r\n\r\nimport CenteredLayout from \"../components/layouts/CenteredLayout\";\r\nimport { IMG_URL } from \"../apiConstants\";\r\nimport ListContainer from \"./ListContainer\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport MasterDetailsLayout from \"../components/layouts/MasterDetails\";\r\nimport PokemonDetailsCard from \"../components/card/Card\";\r\nimport useDetailsFetcher from \"../hooks/DetailsFetch\";\r\n\r\nfunction DetailsContainer({ match }) {\r\n  const { data, status, error } = useDetailsFetcher(`${match.params.id}`);\r\n\r\n  status === \"LOADED\" && console.log(\"fetcher data\", data);\r\n  return (\r\n    <MasterDetailsLayout>\r\n      <ListContainer />\r\n\r\n      <CenteredLayout>\r\n        {status === \"LOADING\" && <Loading />}\r\n        {status === \"LOADED\" && (\r\n          <Fragment>\r\n            <PokemonDetailsCard\r\n              name={capitalizeFirstLetter(data.details.name)}\r\n              img={`${IMG_URL}${padStart(match.params.id)}.png`}\r\n              id={match.params.id}\r\n              types={data.details.types}\r\n              stats={data.details.stats}\r\n              evolutions={findKey(data.evolution.chain, \"species\")}\r\n            ></PokemonDetailsCard>\r\n          </Fragment>\r\n        )}\r\n        {error && <div>Error</div>}\r\n      </CenteredLayout>\r\n    </MasterDetailsLayout>\r\n  );\r\n}\r\n\r\nexport default DetailsContainer;\r\n","import { IMG_URL, LIST_API } from \"../apiConstants\";\r\nimport {\r\n  capitalizeFirstLetter,\r\n  getIdFromUrl,\r\n  onHover,\r\n  padStart,\r\n} from \"../utils/helpers\";\r\n\r\nimport CenteredLayout from \"../components/layouts/CenteredLayout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport { PokemonCard } from \"../components/card/Card\";\r\nimport useListFetcher from \"../hooks/ListFetcher\";\r\n\r\nfunction HomePageContainer() {\r\n  const { data, status } = useListFetcher(LIST_API);\r\n  const { results } = data;\r\n  const items =\r\n    results &&\r\n    results.map((item, index) => {\r\n      const id = getIdFromUrl(item.url);\r\n      return (\r\n        <Link\r\n          key={item.name}\r\n          to={`/pokemon/${id}`}\r\n          onMouseEnter={() => onHover(id)}\r\n        >\r\n          <PokemonCard\r\n            name={capitalizeFirstLetter(item.name)}\r\n            id={id}\r\n            img={`${IMG_URL}${padStart(id)}.png`}\r\n          ></PokemonCard>\r\n        </Link>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <CenteredLayout>\r\n      {status === \"LOADING\" ? <Loading /> : items}\r\n    </CenteredLayout>\r\n  );\r\n}\r\n\r\nexport default HomePageContainer;\r\n","export default __webpack_public_path__ + \"static/media/pokeIcon.493785ff.png\";","import React from \"react\";\r\nimport pokeIcon from \"./pokeIcon.png\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <span className=\"navbar-brand mb-0 h1\">\r\n        <img\r\n          src={pokeIcon}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"\"\r\n        />{\" \"}\r\n        Pokedex\r\n      </span>\r\n    </nav>\r\n  );\r\n};\r\nexport default NavBar;\r\n","export default function NotFound() {\r\n    return <div>404 Url Not Found</div>\r\n  }","import \"./App.css\";\n\nimport {\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\n\nimport DetailsContainer from \"./containers/DetailsContainer\";\nimport HomePageContainer from \"./containers/HomePageContainer\";\nimport NavBar from \"./components/navBar/NavBar\";\nimport NotFound from \"./components/navList/NotFound\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <NavBar />\n        <main className=\"app-container\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePageContainer} />\n            <Route path=\"/pokemon/:id\" component={DetailsContainer} />\n            <Route path=\"/404\" component={NotFound} />\n            <Redirect to=\"/404\" />\n          </Switch>\n        </main>\n      </Router>\n    </React.Fragment>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}